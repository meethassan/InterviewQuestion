/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1,  ListNode l2) {
        int carry =0, temp = 0;
        ListNode result = null, head = null;
        
        while(l1 != null || l2 !=null)
        {
            ListNode tempHead = null;
            if(l1!=null && l2!=null)
            {
                temp = l1.val + l2.val + carry;
                carry = 0;
                if(temp >= 10)
                {
                    carry = temp / 10;
                    tempHead = new ListNode(temp % 10);
                }
                else
                {
                    tempHead = new ListNode(temp);
                }
                
                if(result==null)
                {
                    head= tempHead;
                    result = head;
                }
                else
                  result.next = tempHead;
               result = tempHead;
                l1=l1.next;
                l2=l2.next;
            }
            else if(l1!=null)
            {
                temp = l1.val + carry;
                carry = 0;
                if(temp >= 10)
                {
                  carry = temp / 10;
                    tempHead = new ListNode(temp % 10);
                    
                }
                else
                {
                    tempHead = new ListNode(temp);
                }
                
                if(result==null)
                {
                    head= tempHead;
                    result = head;
                }
                else
                  result.next = tempHead;
                result = tempHead;
                l1=l1.next;
            }
            else if(l2!=null)
            {
                temp = l2.val + carry;
                carry = 0;
                if(temp >= 10)
                {
                   carry = temp / 10;
                    tempHead = new ListNode(temp % 10);
                    
                }
                else
                {
                    tempHead = new ListNode(temp);
                }
                
                if(result==null)
                {
                    head= tempHead;
                    result = head;
                }
                else
                  result.next = tempHead;
                result = tempHead;
                l2=l2.next;
            }  
        }
        
        if(carry>0)
         result.next = new ListNode(carry);
        return head;
    }
}
